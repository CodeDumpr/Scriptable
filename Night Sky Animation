let html = `
<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
  html, body {
    margin: 0;
    padding: 0;
    background: black;
    overflow: hidden;
    height: 100%;
    -webkit-user-select: none;
    -webkit-touch-callout: none;
    user-select: none;
    touch-action: none;
  }
  canvas {
    display: block;
    width: 100vw;
    height: 100vh;
  }
</style>
</head>
<body>
<canvas id="canvas"></canvas>
<script>
const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');

let stars = [];
let shootingStars = [];

const moonEmojis = ['ðŸŒ‘','ðŸŒ’','ðŸŒ“','ðŸŒ”','ðŸŒ•','ðŸŒ–','ðŸŒ—','ðŸŒ˜'];
let currentIndex = 0;
let nextIndex = 1;
let fade = 0;
let fadeSpeed = 0.001;

function resize() {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  generateStars();
}
window.addEventListener('resize', resize);
resize();

function generateStars() {
  stars = [];
  const density = 0.00025;
  const count = Math.floor(canvas.width * canvas.height * density);
  for (let i = 0; i < count; i++) {
    stars.push({
      x: Math.random() * canvas.width,
      y: Math.random() * canvas.height,
      radius: Math.random() * 1.5 + 0.5,
      twinkle: Math.random() * 0.01 + 0.002,
      alpha: Math.random(),
      color: \`hsl(\${Math.random() * 60}, 100%, 85%)\`
    });
  }
}

function drawStars() {
  for (let star of stars) {
    star.alpha += star.twinkle;
    if (star.alpha >= 1 || star.alpha <= 0) star.twinkle *= -1;

    // Parallax drift
    star.x += 0.02;
    if (star.x > canvas.width) star.x = 0;

    ctx.beginPath();
    ctx.globalAlpha = star.alpha;
    ctx.arc(star.x, star.y, star.radius, 0, 2 * Math.PI);
    ctx.fillStyle = star.color;
    ctx.fill();
  }
  ctx.globalAlpha = 1;
}

function createShootingStar() {
  const startX = Math.random() * canvas.width;
  const startY = Math.random() * canvas.height / 2;
  const speed = Math.random() * 10 + 6;
  shootingStars.push({
    x: startX,
    y: startY,
    vx: speed,
    vy: speed / 2,
    length: Math.random() * 100 + 50,
    alpha: 1
  });
}

function drawShootingStars() {
  for (let i = shootingStars.length - 1; i >= 0; i--) {
    let s = shootingStars[i];
    ctx.strokeStyle = \`rgba(255,255,255,\${s.alpha})\`;
    ctx.lineWidth = 2;
    ctx.beginPath();
    ctx.moveTo(s.x, s.y);
    ctx.lineTo(s.x - s.length, s.y - s.length / 2);
    ctx.stroke();

    s.x += s.vx;
    s.y += s.vy;
    s.alpha -= 0.02;

    if (s.alpha <= 0) {
      shootingStars.splice(i, 1);
    }
  }

  if (Math.random() < 0.0005) {
    createShootingStar();
  }
}

function drawMoon() {
  const moonX = 100;
  const moonY = 100;
  const fontSize = 50;
  const glowRadius = 60;

  // Draw moon glow
  ctx.save();
  const gradient = ctx.createRadialGradient(moonX, moonY, 0, moonX, moonY, glowRadius);
  gradient.addColorStop(0, 'rgba(255,255,255,0.4)');
  gradient.addColorStop(1, 'rgba(255,255,255,0)');
  ctx.fillStyle = gradient;
  ctx.beginPath();
  ctx.arc(moonX, moonY, glowRadius, 0, 2 * Math.PI);
  ctx.fill();
  ctx.restore();

  // Draw moon emoji
  ctx.font = fontSize + "px serif";
  ctx.textAlign = "center";
  ctx.textBaseline = "middle";
  ctx.fillStyle = "white";

  ctx.globalAlpha = 1 - fade;
  ctx.fillText(moonEmojis[currentIndex], moonX, moonY);

  ctx.globalAlpha = fade;
  ctx.fillText(moonEmojis[nextIndex], moonX, moonY);

  ctx.globalAlpha = 1;

  fade += fadeSpeed;
  if (fade >= 1) {
    fade = 0;
    currentIndex = nextIndex;
    nextIndex = (nextIndex + 1) % moonEmojis.length;
  }
}

function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  drawStars();
  drawShootingStars();
  drawMoon(); // Moon drawn last, on top
  requestAnimationFrame(animate);
}

animate();
</script>
</body>
</html>
`;

let webView = new WebView();
await webView.loadHTML(html);
await webView.present(true);
